list 
双向链表

lpush
	左添加 进入队列在链表的左边依次开始添加

lpop
	左弹出

rpush
	右添加 进入队列在链表的最右边依次添加


rpop 
	右弹出


lrange 
	得到所有


lrem 
	移除几个什么类型的元素

linsert
	只在找到第一个值的地方
	after 后面插入
	before 前面插入


blpop
	拿到里面的第一个数据 拿不到则阻塞
阻塞,单播队列



hash 点赞,收藏,详情页

存储对象
name::age
name::sex
name::weight

hset key  field value 
	添加一个对象的属性值

hmset 
	添加一个对象的多个属性值

hmget
	获取一个对象的多个属性值

hvals
	获取这个对象的所有属性值

hgetall
	拿到这个对象的所有key value


HINCRBYFLOAT key field increment
	对指定的一个属性进行 +1 -1





set 去重

SADD key member [member ...] 
	添加元素


smembers
	去重查看

srem 
	去除某个value


sinter key...
	返回  多个key 的交集

sinterstore  
	保存到指定key


sunion
	去重并且打印出 并集


差集
sdiff 
	前面的key 与后面的key 做差集


随机事件
Srandmember key count
	count 正数 得到一个去重的结果集
	count 负数 得到一个带重复的结果集

spop
	随机取出一个数据





sorted set 排序


zadd 
	添加一个带数值的set

ZRANGE key start stop [WITHSCORES]
	得到一个带有起始位置的排序组合 


ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]
	最小值和最大值的一个区间组合

zrevrange
	逆序输出

zscore  
	通过元素取到分值

ZRANGE key start stop [WITHSCORES]
	通过元素取到排名


ZINCRBY key increment member
	将一个分值添加到元素上


ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight [weight ...]] [AGGREGATE SUM|MIN|MAX]
		获取交集和并集 权重和集合指令



排序是怎么实现的
	skip list



管道
http://redis.cn/topics/pipelining.html



发布订阅

 client
 	历史数据
 		全量数据  -- 数据库
 		短时间内  -- sorted set 


 	实时数据
		PUBLISH key value 发布

		SUBSCRIBE  key  监听
			先监听才能收到发布的消息



事务

mutil
	开始事务


exec
执行 哪个先到就执行哪个事务

watch
	乐观锁 CAS 监控某个值是否发生了变更


布隆过滤器
https://github.com/RedisBloom/RedisBloom
	
	redis-server --loadmodule /path/to/redisbloom.so





























































